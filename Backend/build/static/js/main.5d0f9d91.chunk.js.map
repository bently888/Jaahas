{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["listOfRestaurants","name","url","lunchUrl","minutes","times","map","hour","minute","flat","currentdate","Date","isFriday","getDay","splitTime","getHours","getMinutes","getSeconds","split","secondsCurrent","App","useState","restaurantData","setRestaurantData","currentlyOpenModal","setCurrentlyOpenModal","foodTrain","setFoodTrain","user","setUser","alertTimeOut","setAlertTimeOut","showTomorrow","setShowTomorrow","useEffect","forEach","restaurant","axios","get","then","response","oldState","reservation","data","savedUser","localStorage","getItem","alertTimeSplit","timeOfAlert","splitAlertTime","className","disabled","onClick","type","value","onChange","e","setItem","target","length","res","key","time","resta","clickedItem","some","train","participants","includes","alert","post","indexOf","join","arr","find","index","splice","deleteName","clearTimeout","trackedTrain","trackedTime","alertTime","setTimeout","addNotification","title","subtitle","message","theme","tag","requireInteraction","native","href","rel","id","menuData","days","dayIndex","parseMenu","row","food","price","restaurantName","foodTrainItem","catch","err","console","error","onTimeButtonClick","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5d0f9d91.chunk.js","sourcesContent":["import React, { useEffect, useState} from 'react';\r\nimport './App.css';\r\nimport axios from 'axios'\r\nimport addNotification from 'react-push-notification';\r\n//import { response } from '../../../Backend/Scraper';\r\n\r\nconst listOfRestaurants = [\r\n  {name: \"Blanko\", url: \"/blanko\", lunchUrl: \"https://blanko.net/lounas\"},\r\n  {name: \"Di Trevi\", url: \"/ditrevi\", lunchUrl: \"https://ditrevi.fi/lounas/\"},\r\n  {name: \"Fontana\", url: \"/fontana\", lunchUrl: \"https://www.fontana.fi/lunch/\"},\r\n  {name: \"Tintå\", url: \"/tinta\", lunchUrl: \"https://www.tinta.fi/lounas\"}\r\n]\r\n\r\nconst hours = [\"10\", \"11\", \"12\", \"13\"]\r\nconst minutes = [\"00\", \"05\", \"10\", \"15\", \"20\", \"25\", \"30\", \"35\", \"40\", \"45\", \"50\", \"55\"]\r\nconst times = hours.map(hour => minutes.map(minute => hour + \":\" + minute)).flat()\r\nvar currentdate = new Date(); \r\nconst isFriday = currentdate.getDay()===5\r\nvar datetime =  currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds()\r\nvar splitTime = datetime.split(':')\r\nvar secondsCurrent = (+splitTime[0]) * 60 * 60 + (+splitTime[1]) * 60 + (+splitTime[2]);\r\n\r\nfunction App() {\r\n  const [restaurantData, setRestaurantData] = useState([])\r\n  const [currentlyOpenModal, setCurrentlyOpenModal] = useState(\"\")\r\n  //const [nameModal, setNameModal] = useState(\"\")\r\n  const [foodTrain, setFoodTrain] = useState([])\r\n  const [user, setUser] = useState(\"\")\r\n  const [alertTimeOut, setAlertTimeOut] = useState()\r\n  const [showTomorrow, setShowTomorrow] = useState(false)\r\n    \r\n  useEffect(() => {\r\n    listOfRestaurants.forEach(restaurant => {\r\n      axios.get(restaurant.url)\r\n      .then(response => setRestaurantData(oldState => ([...oldState, {...response, name: restaurant.name, lunchUrl: restaurant.lunchUrl}])))\r\n    })\r\n\r\n    axios.get('/reservations').then(\r\n      reservation => setFoodTrain(reservation.data)\r\n    ) \r\n    const savedUser = localStorage.getItem('userData')\r\n    setUser(savedUser || \"\");\r\n\r\n  }, [])\r\n  const onTimeButtonClick = (time, restaurantName) => {\r\n    foodTrain.some(foodTrainItem => foodTrainItem.resta === restaurantName && foodTrainItem.time === time) ?\r\n      alert(\"Trat lunch train already exists\")\r\n      :\r\n      foodTrain.some(train => train.participants.indexOf(user)>-1) ?\r\n      //console.log(foodTrain)\r\n        alert(\"You are already in another lunch train\")\r\n        :\r\n        axios\r\n        .post('/reservations', {time: time, resta: restaurantName, participants: [user]})\r\n        .then(response => {\r\n          setFoodTrain(response.data)\r\n        setCurrentlyOpenModal('')\r\n      })\r\n        .catch(err => {\r\n        console.error(err)\r\n      })\r\n  }\r\n\r\n  const joinTrain = (clickedItem) => {\r\n    //Tähän nimen syöttö\r\n    //if (user.length<1) return setNameModal(\"open\")\r\n    if (foodTrain.some(train => train.participants.includes(user)))\r\n      alert(\"You are already in another lunch train\")\r\n    else\r\n    axios\r\n      .post('/join', {time: clickedItem.time, resta: clickedItem.resta, user: user})\r\n      .then(response => setFoodTrain(response.data))\r\n  }\r\n\r\n  const deleteName = () => {\r\n    if (foodTrain.some(train => train.participants.indexOf(user)>-1))\r\n    //alert(\"Try to delete from train\")\r\n    var arr = foodTrain.find(train => train.participants.indexOf(user)>-1)\r\n    //console.log(arr.participants)\r\n    var index = arr.participants.indexOf(user);\r\n        arr.participants.splice(index, 1);\r\n    axios\r\n      .post('/delete', {user: user})\r\n      .then(response => setFoodTrain(response.data))\r\n  }\r\n\r\nconst parseMenu = (menuData) => {\r\n  const now = new Date()\r\n  const days = ['su','ma','ti','ke','to','pe','la']\r\n  const dayIndex = now.getDay()\r\n  const day = showTomorrow && isFriday===false  ? days[ dayIndex+1 ] : days[ dayIndex ]\r\n  const dayMenu = menuData[day]\r\n  return dayMenu\r\n  }\r\n\r\n  const alertTimeSplit = (timeOfAlert) => {\r\n    var splitAlertTime = timeOfAlert.split(':')\r\n    var secondsAlert = (+splitAlertTime[0]) * 60 * 60 + (+splitAlertTime[1]) * 60;\r\n    return (secondsAlert)\r\n  }\r\n\r\nconst alertClick = () => { \r\n  if(alertTimeOut) clearTimeout(alertTimeOut)\r\n  if (foodTrain.some(train => train.participants.includes(user)))\r\n  var trackedTrain = foodTrain.find(train => train.participants.includes(user))\r\n  var trackedTime = trackedTrain.time\r\n  //var trackedTimeInt = trackedTime\r\n  var alertTime = alertTimeSplit(trackedTime)-secondsCurrent\r\n  //console.log(\"time\", alertTime)\r\n\r\n  setAlertTimeOut(setTimeout(() => {\r\n    addNotification({\r\n    title: 'Jaahas',\r\n    subtitle: 'jotain',\r\n    message: 'Ruokailu at ' + trackedTrain.resta,\r\n    theme: 'darkblue',\r\n    tag: \"Jaahas\",\r\n    requireInteraction: true,\r\n    native: true // when using native, your OS will handle theming.\r\n})\r\nalert(\"Syömään!\")\r\n}, \r\nalertTime * 1000 - 180000))\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        {/*<img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\r\n        <h1 className=\"main-title\">\r\n          Jaahas App\r\n        </h1>\r\n          <button className=\"show-tomorrow\" disabled={isFriday} onClick={() => setShowTomorrow(!showTomorrow)}>{showTomorrow?\"today\":\"tomorrow\"}</button>\r\n        {/* renderöi nimen ja listan ruokajunista */}\r\n        <div className=\"selectUserName\">\r\n          <h3>Set Username</h3>\r\n            <div className=\"name-input\">\r\n              <input type=\"text\" name=\"name\" value={user} onChange={e => {localStorage.setItem('userData', e.target.value);\r\n              setUser(e.target.value)}}/>\r\n              {/*<button onClick={}/>*/}\r\n            </div>\r\n          </div>\r\n        <div className=\"times-chosen\">\r\n          {foodTrain.length !== 0 ?\r\n          foodTrain.map(res => \r\n          <p key={res.time + res.resta}>{res.resta} at {res.time}- \r\n          <button onClick={() => joinTrain(res)} \r\n          disabled={user.length<1 \r\n          || foodTrain.some(train => train.participants.indexOf(user)>-1)\r\n          }>\r\n            join train</button>{res.participants.join(\", \")}\r\n          </p>) : \"\"}\r\n          <button onClick={() => deleteName(user)} disabled={!foodTrain.some(train => train.participants.includes(user))}>delete</button>\r\n        </div>\r\n        <div className=\"alert-button\">\r\n          <button onClick={alertClick} className=\"button\" disabled={!foodTrain.some(train => train.participants.includes(user))}>\r\n           Alert\r\n          </button>\r\n      </div>\r\n        <div className=\"restaurants-container\">\r\n        { restaurantData && restaurantData.map(restaurant => \r\n        <div className=\"restaurant\" key={restaurant.name}>\r\n          <h2>\r\n            <a href={restaurant.lunchUrl} rel=\"nofollow\">{restaurant.name}</a>\r\n          </h2>\r\n          <div className=\"Menu\" id=\"Menu\">\r\n            {\r\n            parseMenu(restaurant.data).map(row => <p key={row.food}>{row.food} {row.price}</p>)\r\n            }\r\n          </div>\r\n          <button onClick={()=>setCurrentlyOpenModal(restaurant.name)} disabled={user.length<1}>Select Time</button>\r\n          {currentlyOpenModal===restaurant.name && <div className=\"selectModal\">\r\n          <h2>Select Time</h2>\r\n            <div className=\"time-buttons\">\r\n              {times.map(time => <button key={time} className=\"time-button\" id={time} \r\n              disabled={alertTimeSplit(time)<secondsCurrent}\r\n              onClick={() => \r\n                onTimeButtonClick(time, restaurant.name)\r\n                }\r\n                >\r\n                {time}\r\n                </button>\r\n              )}\r\n            </div>\r\n          <button onClick={()=>setCurrentlyOpenModal(\"\")}>close</button>\r\n          </div>\r\n          }\r\n        </div>\r\n        )}\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Notifications } from 'react-push-notification';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Notifications />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}